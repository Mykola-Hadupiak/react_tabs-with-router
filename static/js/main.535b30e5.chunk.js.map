{"version":3,"sources":["components/NavigationLink/NavigationLink.tsx","components/TabComponent/TabComponent.tsx","components/Tabs/Tabs.tsx","utils/tabs.ts","App.tsx","index.tsx"],"names":["NavigationLink","to","text","className","isActive","classNames","TabComponent","title","id","Tabs","tabs","useParams","tabId","content","find","map","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAQaA,EAAkC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACpD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACTC,IAAW,cAAe,CACxB,YAAaD,KAJnB,SAQGF,KCTMI,EAAgC,SAAC,GAAD,IAC3CC,EAD2C,EAC3CA,MACAC,EAF2C,EAE3CA,GACAJ,EAH2C,EAG3CA,SAH2C,OAK3C,oBAAID,UAAWE,IAAW,CAAE,YAAaD,IAAa,UAAQ,MAA9D,SACE,cAAC,IAAD,CAAMH,GAAE,aAAQO,GAAM,UAAQ,UAA9B,SACGD,OCRME,EAAwB,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KACtC,EAAuBC,cAAfC,aAAR,MAAgB,GAAhB,EAEMC,GAAU,UAAAH,EAAKI,MAAK,qBAAGN,KAAgBI,YAA7B,eAAqCC,UAAW,KAEhE,OACE,qCACE,oBAAIV,UAAU,QAAd,uBAEA,sBAAK,UAAQ,gBAAb,UACE,qBAAKA,UAAU,gBAAf,SACE,6BACGO,EAAKK,KAAI,YAAyB,IAAtBP,EAAqB,EAArBA,GAAID,EAAiB,EAAjBA,MACTH,EAAWI,IAAOI,EAExB,OACE,cAAC,EAAD,CAEEL,MAAOA,EACPC,GAAIA,EACJJ,SAAUA,GAHLI,UAUf,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,SACGU,GACC,oECnCCH,EAAc,CACzB,CAAEF,GAAI,QAASD,MAAO,QAASM,QAAS,eACxC,CAAEL,GAAI,QAASD,MAAO,QAASM,QAAS,eACxC,CAAEL,GAAI,QAASD,MAAO,QAASM,QAAS,gBCG7BG,EAAM,kBACjB,qCACE,qBACEb,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAgBF,GAAG,IAAIC,KAAK,SAC5B,cAAC,EAAD,CAAgBD,GAAG,QAAQC,KAAK,gBAKtC,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,KAAK,IAAIC,QAAS,oBAAIf,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOc,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUjB,GAAG,IAAIkB,SAAO,MAEpD,eAAC,IAAD,CAAOF,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,CAAMR,KAAMA,MAClC,cAAC,IAAD,CAAOO,KAAK,SAASC,QAAS,cAAC,EAAD,CAAMR,KAAMA,SAG5C,cAAC,IAAD,CACEO,KAAK,IACLC,QACE,oBAAIf,UAAU,QAAd,yCChCdkB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.535b30e5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const NavigationLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => (\n        classNames('navbar-item', {\n          'is-active': isActive,\n        })\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  title: string;\n  id: string;\n  isActive: boolean;\n};\n\nexport const TabComponent: React.FC<Props> = ({\n  title,\n  id,\n  isActive,\n}) => (\n  <li className={classNames({ 'is-active': isActive })} data-cy=\"Tab\">\n    <Link to={`../${id}`} data-cy=\"TabLink\">\n      {title}\n    </Link>\n  </li>\n);\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\nimport { TabComponent } from '../TabComponent';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs }) => {\n  const { tabId = '' } = useParams();\n\n  const content = tabs.find(({ id }) => id === tabId)?.content || null;\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(({ id, title }: Tab) => {\n              const isActive = id === tabId;\n\n              return (\n                <TabComponent\n                  key={id}\n                  title={title}\n                  id={id}\n                  isActive={isActive}\n                />\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {content || (\n            <>\n              Please select a tab\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Tab } from '../types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavigationLink } from './components/NavigationLink';\nimport { Tabs } from './components/Tabs';\nimport { tabs } from './utils/tabs';\n\nexport const App = () => (\n  <>\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavigationLink to=\"/\" text=\"Home\" />\n          <NavigationLink to=\"/tabs\" text=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/tabs\">\n            <Route index element={<Tabs tabs={tabs} />} />\n            <Route path=\":tabId\" element={<Tabs tabs={tabs} />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}